lbl_801AC5BC:

	stwu r1, -0x20(r1)
	mflr r0
	stw r0, 0x24(r1)
	addi r11, r1, 0x20
	bl _savegpr_26

	mr r26, r3 // r26 is stageName
	mr r27, r4 // r27 is roomNo
	mr r28, r5 // r28 is u8PtrP2
	mr r29, r6 // r29 is darkworldTblIndex

	// bl dKyd_darkworld_tbl_getp__Fv
	// mr r31, r3
	// li r30, 0

	// cmplwi r28, 0
	// beq APPLE_LBL
	// li r0, 6
	// stb r0, 0(r28)

APPLE_LBL:

	r31 = dKyd_darkworld_tbl_getp__Fv();
	r30 = 0;

	if (u8PtrP2 != NULL) {
		u8PtrP2[0] = 6;
	}

	if (!strcmp(stageName , "F_SP121")) {
		if (roomNo == 0 || (2 <=roomNo && roomNo <= 5) || roomNo == 7) {
			// CHOCOLATE:
			if (u8PtrP2 != NULL) {
				u8PtrP2[0] = 1;
			}
			// DONUT_LBL:
			r30 = 1;
		} else {
			// ELEPHANT_LBL:
			if (roomNo < 9 || roomNo > 0xe) {
				// GRANDMA_LBL:
				r30 = -1;
			} else {
				if (u8PtrP2 != NULL) {
					u8PtrP2[0] = 2;
				}
				// FLAMINGO_LBL:
				r30 = 1;
			}
		}
	} else {
		// HARMFUL_LBL:
		if (!strcmp(stageName, "F_SP108") && roomNo == 1 && ccompp == 0xd) {
			r30 = -1;
		}
	}
	// IGUANA_LBL:

	r0 = tblPtr[darkworldTblIndex].byteValAtOffset4
	if (r0 != 0 && isEventBitComp is not 0 ) {
		r30 = -1;
	}

	return r30;


	// mr r3, r26
	// lis r4, d_kankyo_d_kankyo__stringBase0@ha /* 0x80394C6C@ha */
	// addi r4, r4, d_kankyo_d_kankyo__stringBase0@l /* 0x80394C6C@l */
	// addi r4, r4, 0x192
	// bl strcmp

	// cmpwi r3, 0
	// bne HARMFUL_LBL
	// cmpwi r27, 0
	// beq CHOCOLATE_LBL
	// cmpwi r27, 2
	// blt BANANA_LBL
	// cmpwi r27, 5
	// ble CHOCOLATE_LBL

// BANANA_LBL :
	// cmpwi r27, 7
	// bne ELEPHANT_LBL

// CHOCOLATE_LBL:
	// cmplwi r28, 0
	// beq DONUT_LBL
	// li r0, 1
	// stb r0, 0(r28)

// DONUT_LBL:
	// li r30, 1
	// b IGUANA_LBL _UNCONDITIONAL

ELEPHANT_LBL:
	cmpwi r27, 9
	blt GRANDMA_LBL
	cmpwi r27, 0xe
	bgt GRANDMA_LBL
	cmplwi r28, 0
	beq FLAMINGO_LBL
	li r0, 2
	stb r0, 0(r28)

FLAMINGO_LBL:
	li r30, 1
	b IGUANA_LBL _UNCONDITIONAL

GRANDMA_LBL:
	li r30, -1
	b IGUANA_LBL _UNCONDITIONAL

HARMFUL_LBL:
	mr r3, r26
	lis r4, d_kankyo_d_kankyo__stringBase0@ha /* 0x80394C6C@ha */
	addi r4, r4, d_kankyo_d_kankyo__stringBase0@l /* 0x80394C6C@l */
	addi r4, r4, 0x269
	bl strcmp
	cmpwi r3, 0
	bne IGUANA_LBL
	cmpwi r27, 1
	bne IGUANA_LBL
	lis r3, g_dComIfG_gameInfo@ha /* 0x804061C0@ha */
	addi r3, r3, g_dComIfG_gameInfo@l /* 0x804061C0@l */
	lbz r0, 0x4e0b(r3)
	cmpwi r0, 0xd
	bne IGUANA_LBL
	li r30, -1

IGUANA_LBL:

	slwi r0, r29, 3
	add r3, r31, r0
	lbz r0, 4(r3)
	cmplwi r0, 0
	bne FINISH_FUNCTION
	lis r3, g_dComIfG_gameInfo@ha /* 0x804061C0@ha */
	addi r3, r3, g_dComIfG_gameInfo@l /* 0x804061C0@l */
	addi r3, r3, 0x7f0
	li r4, 0x4510
	bl isEventBit__11dSv_event_cCFUs
	cmpwi r3, 0
	bne FINISH_FUNCTION
	li r30, -1

FINISH_FUNCTION:
	mr r3, r30

	addi r11, r1, 0x20
	bl _restgpr_26
	lwz r0, 0x24(r1)
	mtlr r0
	addi r1, r1, 0x20
	blr





BEFORE_CLEAN_VERSION:

	r31 = dKyd_darkworld_tbl_getp__Fv();
	r30 = 0;

	if (u8PtrP2 != NULL) {
		u8PtrP2[0] = 6;
	}

	if (!strcmp(stageName , "F_SP121")) {
		if (roomNo == 0 || (2 <=roomNo && roomNo <= 5) || roomNo == 7) {
			// CHOCOLATE:
			if (u8PtrP2 != NULL) {
				u8PtrP2[0] = 1;
			}
			// DONUT_LBL:
			r30 = 1;
		} else {
			// ELEPHANT_LBL:
			if (roomNo < 9 || roomNo > 0xe) {
				// GRANDMA_LBL:
				r30 = -1;
			} else {
				if (u8PtrP2 != NULL) {
					u8PtrP2[0] = 2;
				}
				// FLAMINGO_LBL:
				r30 = 1;
			}
		}
	} else {
		// HARMFUL_LBL:
		if (!strcmp(stageName, "F_SP108") && roomNo == 1 && ccompp == 0xd) {
			r30 = -1;
		}
	}
	// IGUANA_LBL:

	r0 = tblPtr[darkworldTblIndex].byteValAtOffset4
	if (r0 != 0 && isEventBitComp is not 0 ) {
		r30 = -1;
	}

	return r30;


CLEAN_VERSION:

	const tblPtr = dKyd_darkworld_tbl_getp__Fv();
	let result = 0;

	if (u8PtrP2 != NULL) {
		u8PtrP2[0] = 6;
	}

	if (!strcmp(stageName , "F_SP121")) {
		if (roomNo == 0 || (2 <=roomNo && roomNo <= 5) || roomNo == 7) {
			if (u8PtrP2 != NULL) {
				u8PtrP2[0] = 1;
			}
			result = 1;
		} else {
			if (roomNo < 9 || roomNo > 0xe) {
				result = -1;
			} else {
				if (u8PtrP2 != NULL) {
					u8PtrP2[0] = 2;
				}
				result = 1;
			}
		}
	} else if (!strcmp(stageName, "F_SP108") && roomNo == 1 && ccompp == 0xd) {
		result = -1;
	}

	if (tblPtr[darkworldTblIndex].byteValAtOffset4 != 0 && isEventBitComp is not 0 ) {
		result = -1;
	}

	return result;




// Other Notes:

8002b3b8 void
__thiscall setStartStage(dComIfG_play_c *this,
	dStage_startStage_c *param_1)

r3 is 804070f8
r4 is 8040afce is dStage_nextStage


void dComIfG_play_c::setStartStage(dStage_startStage_c* pStartStage) {
	mLayerOld = mStartStage.getLayer();
	// ^ this sets this[0x4e0d] to val at this[0x3ed3]
	// this is setting byte at 8040bf05 (this address is mLayerOld)
	// From title screen, gets set to 0xa.
	// Copying the byte from 8040bf05 to 8040afcb is one of 2 places it gets set.
	// Other place hardcodes it to 9.
	mStartStage = *pStartStage;
}
